# Terraform Cloud workflow bridge for speculative plans.
# Requires repo variables `TFC_ORGANIZATION`, `TFC_WORKSPACE` and secret `TFC_TOKEN`.
name: Terraform Cloud Speculative Run

on:
  pull_request:
    branches:
      - main
    paths:
      - '**/*.tf'
      - '**/*.tfvars'
      - '**/.terraform.lock.hcl'
      - '.terraform-version'
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

env:
  TF_CLOUD_ORGANIZATION: "${{ vars.TFC_ORGANIZATION }}"
  TF_API_TOKEN: "${{ secrets.TFC_TOKEN }}"
  TF_WORKSPACE: "${{ vars.TFC_WORKSPACE }}"
  CONFIG_DIRECTORY: "."

jobs:
  terraform-cloud-speculative-run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Upload configuration to Terraform Cloud
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.3.2
        id: upload
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.CONFIG_DIRECTORY }}
          speculative: true

      - name: Create speculative run in Terraform Cloud
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.3.2
        id: run
        continue-on-error: true
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.upload.outputs.configuration_version_id }}
          plan_only: true
          message: "Speculative plan from GitHub Actions for ${{ github.event.pull_request.head.sha || github.sha }}"

      - name: Capture plan output
        uses: hashicorp/tfc-workflows-github/actions/plan-output@v1.3.2
        id: plan-output
        with:
          plan: ${{ steps.run.outputs.plan_id }}

      - name: Upsert Terraform Cloud plan comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            const botComment = comments.find(comment => comment.user.type === 'Bot' && comment.body.includes('Terraform Cloud Plan Output'));
            const output = `#### Terraform Cloud Plan Output\n\n` +
              `*Workspace:* **${process.env.TF_WORKSPACE}**\n` +
              `*Status:* **${{ steps.run.outputs.run_status || 'unknown' }}**\n` +
              `\n\`\`\`\nPlan: ${{ steps.plan-output.outputs.add }} to add, ${{ steps.plan-output.outputs.change }} to change, ${{ steps.plan-output.outputs.destroy }} to destroy.\n\`\`\`\n` +
              `[:cloud: View run in Terraform Cloud](${{ steps.run.outputs.run_link }})`;
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: output,
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: output,
              });
            }

      - name: Fail job when run is not planned_and_finished
        if: ${{ steps.run.outputs.run_status != 'planned_and_finished' }}
        run: |
          echo "Terraform Cloud run requires attention."
          echo "Status: ${{ steps.run.outputs.run_status }}"
          echo "Run URL: ${{ steps.run.outputs.run_link }}"
          exit 1
